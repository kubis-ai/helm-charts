pipelinesVersion: 1.5.0 
repositories:
  minio: gcr.io/ml-pipeline/google/pipelines/minio
  mysql: gcr.io/ml-pipeline/google/pipelines/mysql
  argoexecutor: gcr.io/ml-pipeline/google/pipelines/argoexecutor
  argoworkflowcontroller: gcr.io/ml-pipeline/google/pipelines/argoworkflowcontroller
  cacheserver: gcr.io/ml-pipeline/google/pipelines/cacheserver
  cachedeployer: gcr.io/ml-pipeline/google/pipelines/cachedeployer
  metadataserver: gcr.io/ml-pipeline/google/pipelines/metadataserver
  metadataenvoy: gcr.io/ml-pipeline/google/pipelines/metadataenvoy
  metadatawriter: gcr.io/ml-pipeline/google/pipelines/metadatawriter
  persistenceagent: gcr.io/ml-pipeline/google/pipelines/persistenceagent
  scheduledworkflow: gcr.io/ml-pipeline/google/pipelines/scheduledworkflow
  frontend: gcr.io/ml-pipeline/google/pipelines/frontend
  viewercrd: gcr.io/ml-pipeline/google/pipelines/viewercrd
  visualizationserver: gcr.io/ml-pipeline/google/pipelines/visualizationserver
  apiserver: gcr.io/ml-pipeline/google/pipelines/apiserver

frontend:
  isExposed: 
  targetGroupARN: 
  nodePort:

apiserver:
  isExposed: 
  targetGroupARN: 
  nodePort:  

iam:
  annotationKey: iam.amazonaws.com/role
  role:

managedArtifactStore:
  enabled: true
  s3BucketName:

managedMetadataStore:
  enabled: false
  dbHost: 
  dbUsername:
  dbPassword:
  databaseNamePrefix: '{{ .Release.Name | replace "-" "_" | replace "." "_" }}'

hasDefaultBucket: false
defaultBucketName: data
minioServiceHost:
minioServiceRegion: