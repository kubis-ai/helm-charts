apiVersion: v1
kind: Service
metadata:
  name: minio-service
  labels:
    app: minio
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  ports:
    - port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: minio
    app.kubernetes.io/name: {{ .Release.Name }}
---
{{ if .Values.managedArtifactStore.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    app: minio
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: minio
      app.kubernetes.io/name: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
        app.kubernetes.io/name: {{ .Release.Name }}
      annotations:
        {{ .Values.iam.annotationKey }}: {{ .Values.iam.role | quote }}
    spec:
      containers:
        - args:
            - gateway
            - s3
          env:
            - name: MINIO_ACCESS_KEY
              value: minio
            - name: MINIO_SECRET_KEY
              value: minio123
          image: "{{ .Values.repositories.minio }}:{{ .Values.pipelinesVersion }}"
          name: minio
          ports:
            - containerPort: 9000
          resources:
            requests:
              cpu: 20m
              memory: 100Mi
{{ end }}
---
{{ if not .Values.managedArtifactStore.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    app: minio
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: minio
      app.kubernetes.io/name: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
        - args:
            - server
            - /data
          env:
            - name: MINIO_ACCESS_KEY
              value: minio
            - name: MINIO_SECRET_KEY
              value: minio123
          image: "{{ .Values.repositories.minio }}:{{ .Values.pipelinesVersion }}"
          name: minio
          ports:
            - containerPort: 9000
          volumeMounts:
            - mountPath: /data
              name: data
              subPath: minio
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio-pvc
{{ end }}
